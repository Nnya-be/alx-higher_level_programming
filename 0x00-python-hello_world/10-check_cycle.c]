#include "lists.h"
/**
 *check_cycle - a function to check if ther is a cycle in a linked list
 *@list: The linked list to be checked
 *Return: 0 on not finding a cycle
 */
int check_cycle(listint_t *list)
{
listint_t *node = malloc(sizeof(listint_t));
listint_t *node_2 = malloc(sizeof(listint_t));

if (list == NULL)
	return (0);

if (node == NULL || node_2 == NULL)
	return (0);

node = list;
node_2 = node;
while (node_2 != NULL)
{
	if (node->next == node_2->next)
		return (1);
node_2 = node_2->next;
node_2 = node_2->next;
node = node->next;
}
free(node);
free(node_2);
return (0);
}
